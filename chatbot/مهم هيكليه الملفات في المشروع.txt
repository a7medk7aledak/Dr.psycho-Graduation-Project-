.
├── actions/
│   └── __init__.py                   # ملف فارغ لتعريف حزمة Python (Package)
├── config.yml                         # ملف تكوين Rasa (لتحديد مكونات NLU وCore)
├── credentials.yml                    # بيانات اعتماد الوصول إلى قنوات المحادثة والخدمات
├── data/
│   ├── nlu.yml                        # بيانات التدريب لفهم اللغة الطبيعية (NLU)
│   ├── stories.yml                    # القصص (السيناريوهات) لتدريب Core
│   ├── rules.yml                      # القواعد لتوجيه الروبوت للردود المحددة
│   └── responses.yml                  # الردود الجاهزة التي يستخدمها الروبوت
├── domain.yml                         # تعريف النوايا، الأفعال، الكيانات، والردود
├── endpoints.yml                      # إعدادات نقاط النهاية لخادم الأفعال أو خدمات أخرى
├── models/                            # مجلد لتخزين النماذج المدربة (.tar.gz)
├── tests/                             # اختبارات المحادثات للتحقق من سلوك الروبوت
│   └── stories.yml                    # قصص مخصصة لاختبار المحادثات
├── venv/                              # مجلد البيئة الافتراضية (virtual environment)
│   ├── bin/                           # ملفات تنفيذية لتشغيل البيئة (Linux/Mac)
│   ├── Scripts/                       # ملفات تنفيذية لتشغيل البيئة (Windows)
│   ├── lib/                           # المكتبات المثبتة في البيئة الافتراضية
│   └── include/                       # ملفات الرأس (header files)
├── actions.py                         # ملف Python لتطوير الأفعال المخصصة (custom actions)
├── .idea/                             # ملفات إعداد IntelliJ IDEA (مخصصة للمشروع)
│   ├── workspace.xml                  # إعدادات مساحة العمل في IntelliJ IDEA
│   ├── misc.xml                       # إعدادات متفرقة للمشروع
│   └── modules.xml                    # إعدادات الوحدات (Modules) في المشروع



شرح إضافي لبعض المجلدات والملفات:
venv/:

يحتوي على البيئة الافتراضية (virtual environment) التي تُستخدم لعزل حزم المشروع. سيتم تثبيت جميع الحزم مثل rasa وtensorflow هنا.
مجلدات مهمة داخل venv:
Scripts/ (Windows) أو bin/ (Linux/MacOS): يحتوي على السكربتات لتشغيل البيئة الافتراضية.
lib/: يحتوي على المكتبات التي تم تثبيتها عبر pip، مثل مكتبات Rasa.
actions.py:

ملف Python الذي يحتوي على الأفعال المخصصة التي تكتبها لتنفيذ منطق معين أثناء تشغيل الروبوت.
.idea/:

هذا المجلد خاص بـ IntelliJ IDEA ويحتوي على ملفات إعداد المشروع مثل تكوين مساحة العمل (workspace) والوحدات (modules). إذا كنت تستخدم IntelliJ، سيتم إنشاء هذا المجلد تلقائيًا.
data/:

يحتوي على بيانات التدريب مثل:
nlu.yml: أمثلة على النوايا (intents) والكيانات (entities) لتدريب نموذج NLU.
stories.yml: سيناريوهات المحادثة لتدريب نموذج Core.
rules.yml: قواعد تحدد سلوك الروبوت في مواقف معينة.
config.yml:

يحدد مكونات Rasa مثل المكونات التي ستستخدمها لفهم اللغة الطبيعية (مثل Tokenizer وFeaturizer) ومكونات Core (مثل السياسات).
domain.yml:

يحتوي على تعريفات النوايا (intents)، الأفعال (actions)، الكيانات (entities)، الرسائل (responses)، والوظائف المخصصة التي يستطيع الروبوت التعامل معها.
endpoints.yml:

يحتوي على نقاط النهاية (endpoints) لتحديد كيفية التواصل مع خادم الأفعال المخصصة (action server) أو الخدمات الأخرى.
tests/:

هذا المجلد يستخدم لتخزين سيناريوهات اختبار المحادثات، حيث يمكنك التأكد من أن الروبوت يتصرف كما هو متوقع في سيناريوهات معينة.
models/:

يحتوي على الملفات المدربة الخاصة بالنماذج (بعد تشغيل rasa train). يتم حفظ النماذج في هذا المجلد بامتداد .tar.gz.
.vscode/:

هذا المجلد خاص بـ Visual Studio Code إذا كنت تستخدمه. يحتوي على إعدادات المشروع مثل settings.json لتخصيص بيئة التطوير.
نصائح إضافية:
إذا كنت تستخدم IntelliJ IDEA أو VSCode، من المهم إعداد مفسر Python لاستخدام البيئة الافتراضية (venv) حتى تضمن أن جميع الحزم المثبتة تعمل بشكل صحيح داخل بيئة المشروع.
تأكد من تعديل ملفات config.yml وdomain.yml وnlu.yml وstories.yml بناءً على احتياجات الروبوت الخاص بك.